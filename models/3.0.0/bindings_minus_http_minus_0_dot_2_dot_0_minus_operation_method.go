
package models
import (  
  "encoding/json"
)
// BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethod represents an enum of BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethod.
type BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethod uint

const (
  BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodGet BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethod = iota
  BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodPut
  BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodPost
  BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodPatch
  BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodDelete
  BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodHead
  BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodOptions
  BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodConnect
  BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodTrace
)

// Value returns the value of the enum.
func (op BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethod) Value() any {
	if op >= BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethod(len(BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodValues)) {
		return nil
	}
	return BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodValues[op]
}

var BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodValues = []any{"GET","PUT","POST","PATCH","DELETE","HEAD","OPTIONS","CONNECT","TRACE"}
var ValuesToBindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethod = map[any]BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethod{
  BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodValues[BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodGet]: BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodGet,
  BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodValues[BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodPut]: BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodPut,
  BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodValues[BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodPost]: BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodPost,
  BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodValues[BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodPatch]: BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodPatch,
  BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodValues[BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodDelete]: BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodDelete,
  BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodValues[BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodHead]: BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodHead,
  BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodValues[BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodOptions]: BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodOptions,
  BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodValues[BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodConnect]: BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodConnect,
  BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodValues[BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodTrace]: BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethodTrace,
}

 
func (op *BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethod) UnmarshalJSON(raw []byte) error {
  var v any
  if err := json.Unmarshal(raw, &v); err != nil {
  return err
  }
  *op = ValuesToBindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethod[v]
  return nil
}

func (op BindingsMinusHttpMinus_0Dot_2Dot_0MinusOperationMethod) MarshalJSON() ([]byte, error) {
  return json.Marshal(op.Value())
}